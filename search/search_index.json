{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\ude80 Getting Started","text":"<p>Quick-Start.dev is a simple GUI tool to create, edit, and generate project templates with live preview and OpenAPI support. Use it to build custom starters, generate code from OpenAPI, reuse common features like auth or CI, share templates with your team, and quickly start new projects.</p>"},{"location":"#features","title":"\ud83d\ude80 Features","text":"<ul> <li>\ud83d\uddc2\ufe0f Easily add conditions and loop to folders and files  </li> <li>\u2699\ufe0f Real-time preview while editing templates  </li> <li>\ud83d\udd0c OpenAPI support for generating templates from specs  </li> <li>\u2705 Inline error logging and debugging during templating    </li> <li>\ud83c\udf10 Template marketplace for full or partial templates</li> </ul>"},{"location":"#upcoming-features","title":"\ud83d\udd2e Upcoming Features","text":"<ul> <li>\ud83e\udd16 AI-assisted template and project structure generation.</li> </ul>"},{"location":"#use-cases","title":"\ud83d\udca1 Use Cases","text":"<ul> <li>Scaffold full-stack apps with dynamic folder structures  </li> <li>Generate REST API boilerplates from OpenAPI specs  </li> <li>Build and reuse feature-based templates (e.g., auth, CI/CD)  </li> <li>Share project templates across teams or communities  </li> <li>Quickly prototype and launch new codebases</li> </ul> <p>Welcome to Quick-Start.dev! Follow these steps to build your first project template.</p>"},{"location":"#step-1-install-launch","title":"\ud83d\udee0\ufe0f Step 1: Install &amp; Launch","text":"<ol> <li>Download the latest release from GitHub Releases</li> <li>Launch the application</li> <li>Login or containue</li> </ol>"},{"location":"#step-2-create-a-new-template","title":"\ud83d\udcc1 Step 2: Create a New Template","text":"<ol> <li>Click New a new repository on your local drive</li> <li>Name your template (e.g., <code>my-clean-flutter-project</code>)</li> <li>Choose the base folder where the structure will be saved</li> <li>Add project variables.  </li> </ol>"},{"location":"#_1","title":"Home","text":""},{"location":"#step-3-add-files-and-folders","title":"\ud83e\udde9 Step 3: Add Files and Folders","text":"<ul> <li>Right-click to add folders or files</li> <li>Use <code>if</code> , <code>^if</code> and <code>for</code> syntax to create dynamic content  </li> </ul>"},{"location":"#step-4-declare-project-variables","title":"\ud83c\udfaf Step 4: Declare Project Variables","text":"<ul> <li>Go to Project Variables</li> <li>Add variables like:</li> <li><code>project_name</code></li> <li><code>author</code></li> <li><code>features</code> (list)</li> </ul>"},{"location":"#step-5-generate-a-project","title":"\u2699\ufe0f Step 5: Generate a Project","text":"<ul> <li>Click Generate Project </li> <li>Fill project variables</li> <li>Your fully generated project appears</li> <li> </li> </ul>"},{"location":"exclude/","title":"\ud83d\udeab Excluding Files and Folders","text":"<p>You can exclude specific files or folders during the generation process.</p>"},{"location":"exclude/#how-to-exclude","title":"How to Exclude","text":"<p>When you start generating a project:</p> <ol> <li>The file/folder structure will be displayed.</li> <li>You can unselect any file or folder you want to exclude.</li> <li>Optionally, enter relative paths to exclude manually using an input field.</li> </ol> <p>Example manual exclude input:</p> <pre><code>\nnode_modules/\n.quick-start/\ntests/temp/\nREADME_draft.md\n\n</code></pre>"},{"location":"exclude/#use-cases","title":"Use Cases","text":"<ul> <li>Skip temporary or configuration folders not needed in the final project.</li> <li>Avoid including large directories like <code>node_modules</code>.</li> <li>Exclude scaffolding config folders like <code>.quick-start</code>.</li> </ul>"},{"location":"exclude/#notes","title":"Notes","text":"<ul> <li>Paths are relative to the root of the generated project.</li> <li>Wildcard support (<code>*</code>) for patterns is planned for a future release.</li> <li>Excluded items will not be copied into the generated output.</li> </ul>"},{"location":"functions/","title":"\ud83d\udee0 Template Engine Built-in Functions","text":"<p>This document lists all available built-in functions with their descriptions, usage, and return types.</p>"},{"location":"functions/#abs","title":"\ud83d\udd39 <code>abs()</code>","text":"<ul> <li>Return Type: <code>num</code></li> <li>Description: Returns the absolute value of a number or numeric string.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.abs() }}\n</code></pre>"},{"location":"functions/#base64decode","title":"\ud83d\udd39 <code>base64Decode()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Decodes a Base64 string. Optionally handles missing padding.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.base64Decode() }}\n</code></pre>"},{"location":"functions/#base64encode","title":"\ud83d\udd39 <code>base64Encode()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Encodes a string to Base64. Optionally removes padding.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.base64Encode() }}\n</code></pre>"},{"location":"functions/#ceil","title":"\ud83d\udd39 <code>ceil()</code>","text":"<ul> <li>Return Type: <code>int</code></li> <li>Description: Returns the smallest integer greater than or equal to a number.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.ceil() }}\n</code></pre>"},{"location":"functions/#clean","title":"\ud83d\udd39 <code>clean()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Cleans a string (implementation depends on <code>cleanName</code>).</li> <li>Usage:</li> </ul> <pre><code>{{ __value.clean() }}\n</code></pre>"},{"location":"functions/#contains","title":"\ud83d\udd39 <code>contains()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if a string or list contains a specified element.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.contains() }}\n</code></pre>"},{"location":"functions/#containskey","title":"\ud83d\udd39 <code>containsKey()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if a map contains a specific key.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.containsKey() }}\n</code></pre>"},{"location":"functions/#containsvalue","title":"\ud83d\udd39 <code>containsValue()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if a map contains a specific value.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.containsValue() }}\n</code></pre>"},{"location":"functions/#endswith","title":"\ud83d\udd39 <code>endsWith()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if a string ends with a specified substring.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.endsWith() }}\n</code></pre>"},{"location":"functions/#equals","title":"\ud83d\udd39 <code>equals()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if two values are equal.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.equals() }}\n</code></pre>"},{"location":"functions/#first","title":"\ud83d\udd39 <code>first()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: Returns the first element of a non-empty list.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.first() }}\n</code></pre>"},{"location":"functions/#floor","title":"\ud83d\udd39 <code>floor()</code>","text":"<ul> <li>Return Type: <code>int</code></li> <li>Description: Returns the greatest integer less than or equal to a number.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.floor() }}\n</code></pre>"},{"location":"functions/#get","title":"\ud83d\udd39 <code>get()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: Retrieves a value from a map by key. Throws an error if the key is not found.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.get() }}\n</code></pre>"},{"location":"functions/#getconfig","title":"\ud83d\udd39 <code>getConfig()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: Retrieves a configuration value.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getConfig() }}\n</code></pre>"},{"location":"functions/#getkeys","title":"\ud83d\udd39 <code>getKeys()</code>","text":"<ul> <li>Return Type: <code>List&lt;String&gt;</code></li> <li>Description: [DEPRECATED] Use keys() instead. Returns a list of all keys in a map.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getKeys() }}\n</code></pre>"},{"location":"functions/#getornull","title":"\ud83d\udd39 <code>getOrNull()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: Retrieves a value from a map by key, or returns null if the key is not found.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getOrNull() }}\n</code></pre>"},{"location":"functions/#getpathsv3","title":"\ud83d\udd39 <code>getPathsV3()</code>","text":"<ul> <li>Return Type: <code>List&lt;dynamic&gt;</code></li> <li>Description: Parses and returns OpenAPI V3 paths.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getPathsV3() }}\n</code></pre>"},{"location":"functions/#getqueryv3","title":"\ud83d\udd39 <code>getQueryV3()</code>","text":"<ul> <li>Return Type: <code>List&lt;dynamic&gt;</code></li> <li>Description: Parses and returns OpenAPI V3 queries.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getQueryV3() }}\n</code></pre>"},{"location":"functions/#getrequestbodyv3","title":"\ud83d\udd39 <code>getRequestBodyV3()</code>","text":"<ul> <li>Return Type: <code>Map&lt;String, dynamic&gt;</code></li> <li>Description: Extracts the schema from an OpenAPI V3 request body for a specific content type.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getRequestBodyV3() }}\n</code></pre>"},{"location":"functions/#getvalues","title":"\ud83d\udd39 <code>getValues()</code>","text":"<ul> <li>Return Type: <code>List&lt;dynamic&gt;</code></li> <li>Description: [DEPRECATED] Use values() instead. Returns a list of all values in a map.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getValues() }}\n</code></pre>"},{"location":"functions/#getvar","title":"\ud83d\udd39 <code>getVar()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: Retrieves a variable from the data collection.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.getVar() }}\n</code></pre>"},{"location":"functions/#greaterthan","title":"\ud83d\udd39 <code>greaterThan()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if the first numeric value is greater than the second.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.greaterThan() }}\n</code></pre>"},{"location":"functions/#greaterthanorequals","title":"\ud83d\udd39 <code>greaterThanOrEquals()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if the first numeric value is greater than or equal to the second.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.greaterThanOrEquals() }}\n</code></pre>"},{"location":"functions/#groupby","title":"\ud83d\udd39 <code>groupBy()</code>","text":"<ul> <li>Return Type: <code>Map&lt;String, List&lt;dynamic&gt;&gt;</code></li> <li>Description: Groups a map by a specified nested key.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.groupBy() }}\n</code></pre>"},{"location":"functions/#ifnottruereturn","title":"\ud83d\udd39 <code>ifNotTrueReturn()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: If the value is falsy (null, zero, empty, false), returns the argument; otherwise, returns null.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.ifNotTrueReturn() }}\n</code></pre>"},{"location":"functions/#iftruereturn","title":"\ud83d\udd39 <code>ifTrueReturn()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: If the value is truthy (non-null, non-zero, non-empty, true), returns the argument; otherwise, returns null.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.ifTrueReturn() }}\n</code></pre>"},{"location":"functions/#isempty","title":"\ud83d\udd39 <code>isEmpty()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if a string, list, or map is empty.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.isEmpty() }}\n</code></pre>"},{"location":"functions/#iseven","title":"\ud83d\udd39 <code>isEven()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if an integer or integer-like string is even.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.isEven() }}\n</code></pre>"},{"location":"functions/#isnotempty","title":"\ud83d\udd39 <code>isNotEmpty()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if a string, list, or map is not empty.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.isNotEmpty() }}\n</code></pre>"},{"location":"functions/#isnotnull","title":"\ud83d\udd39 <code>isNotNull()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if the input value is not null.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.isNotNull() }}\n</code></pre>"},{"location":"functions/#isnull","title":"\ud83d\udd39 <code>isNull()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if the input value is null.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.isNull() }}\n</code></pre>"},{"location":"functions/#isodd","title":"\ud83d\udd39 <code>isOdd()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if an integer or integer-like string is odd.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.isOdd() }}\n</code></pre>"},{"location":"functions/#join","title":"\ud83d\udd39 <code>join()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Joins elements of a list into a string using an optional delimiter.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.join() }}\n</code></pre>"},{"location":"functions/#keys","title":"\ud83d\udd39 <code>keys()</code>","text":"<ul> <li>Return Type: <code>List&lt;dynamic&gt;</code></li> <li>Description: Returns a list of all keys in a map.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.keys() }}\n</code></pre>"},{"location":"functions/#last","title":"\ud83d\udd39 <code>last()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: Returns the last element of a non-empty list.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.last() }}\n</code></pre>"},{"location":"functions/#length","title":"\ud83d\udd39 <code>length()</code>","text":"<ul> <li>Return Type: <code>int</code></li> <li>Description: Returns the length of a string, list, or the number of keys in a map.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.length() }}\n</code></pre>"},{"location":"functions/#lessthan","title":"\ud83d\udd39 <code>lessThan()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if the first numeric value is less than the second.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.lessThan() }}\n</code></pre>"},{"location":"functions/#lessthanorequals","title":"\ud83d\udd39 <code>lessThanOrEquals()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if the first numeric value is less than or equal to the second.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.lessThanOrEquals() }}\n</code></pre>"},{"location":"functions/#notequals","title":"\ud83d\udd39 <code>notEquals()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if two values are not equal.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.notEquals() }}\n</code></pre>"},{"location":"functions/#openapitype","title":"\ud83d\udd39 <code>openAPIType()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Determines the OpenAPI type for a given schema and language.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.openAPIType() }}\n</code></pre>"},{"location":"functions/#padleft","title":"\ud83d\udd39 <code>padLeft()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Add the argument string to the left of the value.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.padLeft() }}\n</code></pre>"},{"location":"functions/#padright","title":"\ud83d\udd39 <code>padRight()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Add the argument string to the right of the value.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.padRight() }}\n</code></pre>"},{"location":"functions/#parseschemas","title":"\ud83d\udd39 <code>parseSchemas()</code>","text":"<ul> <li>Return Type: <code>Map</code></li> <li>Description: Parses all OpenAPI schemas.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.parseSchemas() }}\n</code></pre>"},{"location":"functions/#range","title":"\ud83d\udd39 <code>range()</code>","text":"<ul> <li>Return Type: <code>List&lt;int&gt;</code></li> <li>Description: Generates a list of integers from 0 up to (but not including) the specified limit.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.range() }}\n</code></pre>"},{"location":"functions/#raw","title":"\ud83d\udd39 <code>raw()</code>","text":"<ul> <li>Return Type: <code>dynamic</code></li> <li>Description: Returns the argument value directly, useful for preventing further processing.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.raw() }}\n</code></pre>"},{"location":"functions/#removeall","title":"\ud83d\udd39 <code>removeAll()</code>","text":"<ul> <li>Return Type: <code>String?</code></li> <li>Description: Removes all occurrences of a substring from a string.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.removeAll() }}\n</code></pre>"},{"location":"functions/#reverse","title":"\ud83d\udd39 <code>reverse()</code>","text":"<ul> <li>Return Type: <code>List</code></li> <li>Description: Returns a new list with the elements of the original list in reverse order.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.reverse() }}\n</code></pre>"},{"location":"functions/#round","title":"\ud83d\udd39 <code>round()</code>","text":"<ul> <li>Return Type: <code>int</code></li> <li>Description: Rounds a number to the nearest integer.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.round() }}\n</code></pre>"},{"location":"functions/#setconfig","title":"\ud83d\udd39 <code>setConfig()</code>","text":"<ul> <li>Return Type: <code>void</code></li> <li>Description: Sets a configuration value.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.setConfig() }}\n</code></pre>"},{"location":"functions/#setvar","title":"\ud83d\udd39 <code>setVar()</code>","text":"<ul> <li>Return Type: <code>void</code></li> <li>Description: Sets a variable in the data collection.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.setVar() }}\n</code></pre>"},{"location":"functions/#shuffle","title":"\ud83d\udd39 <code>shuffle()</code>","text":"<ul> <li>Return Type: <code>List</code></li> <li>Description: Randomly shuffles the elements of a list.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.shuffle() }}\n</code></pre>"},{"location":"functions/#sort","title":"\ud83d\udd39 <code>sort()</code>","text":"<ul> <li>Return Type: <code>List</code></li> <li>Description: Sorts a list in ascending or descending order. Elements must be Comparable.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.sort() }}\n</code></pre>"},{"location":"functions/#split","title":"\ud83d\udd39 <code>split()</code>","text":"<ul> <li>Return Type: <code>List&lt;String&gt;</code></li> <li>Description: Splits a string into a list of substrings by a delimiter.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.split() }}\n</code></pre>"},{"location":"functions/#startswith","title":"\ud83d\udd39 <code>startsWith()</code>","text":"<ul> <li>Return Type: <code>bool</code></li> <li>Description: Checks if a string starts with a specified substring.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.startsWith() }}\n</code></pre>"},{"location":"functions/#tocamelcase","title":"\ud83d\udd39 <code>toCamelCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to camel case (e.g., 'hello world' to 'helloWorld').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toCamelCase() }}\n</code></pre>"},{"location":"functions/#toconstantcase","title":"\ud83d\udd39 <code>toConstantCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to constant case (e.g., 'hello world' to 'HELLO_WORLD').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toConstantCase() }}\n</code></pre>"},{"location":"functions/#todotcase","title":"\ud83d\udd39 <code>toDotCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to dot case (e.g., 'hello world' to 'hello.world').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toDotCase() }}\n</code></pre>"},{"location":"functions/#todouble","title":"\ud83d\udd39 <code>toDouble()</code>","text":"<ul> <li>Return Type: <code>double?</code></li> <li>Description: Converts a numeric value or a numeric string to a double. Returns null if the string cannot be parsed.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toDouble() }}\n</code></pre>"},{"location":"functions/#toheadercase","title":"\ud83d\udd39 <code>toHeaderCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to header case (e.g., 'hello world' to 'Hello-World').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toHeaderCase() }}\n</code></pre>"},{"location":"functions/#toint","title":"\ud83d\udd39 <code>toInt()</code>","text":"<ul> <li>Return Type: <code>int?</code></li> <li>Description: Converts a numeric value or a numeric string to an integer. Returns null if the string cannot be parsed.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toInt() }}\n</code></pre>"},{"location":"functions/#tojson","title":"\ud83d\udd39 <code>toJson()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a Map to a JSON string. Accepts an optional integer 'arg' for indentation (pretty printing).</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toJson() }}\n</code></pre>"},{"location":"functions/#tolowercase","title":"\ud83d\udd39 <code>toLowerCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to lowercase.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toLowerCase() }}\n</code></pre>"},{"location":"functions/#toparamcase","title":"\ud83d\udd39 <code>toParamCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to param case (e.g., 'hello world' to 'hello-world').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toParamCase() }}\n</code></pre>"},{"location":"functions/#topascalcase","title":"\ud83d\udd39 <code>toPascalCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to Pascal case (e.g., 'hello world' to 'HelloWorld').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toPascalCase() }}\n</code></pre>"},{"location":"functions/#tosentencecase","title":"\ud83d\udd39 <code>toSentenceCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to sentence case (e.g., 'hello world' to 'Hello world').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toSentenceCase() }}\n</code></pre>"},{"location":"functions/#tosnakecase","title":"\ud83d\udd39 <code>toSnakeCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to snake case (e.g., 'hello world' to 'hello_world').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toSnakeCase() }}\n</code></pre>"},{"location":"functions/#totitlecase","title":"\ud83d\udd39 <code>toTitleCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to title case (e.g., 'hello world' to 'Hello World').</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toTitleCase() }}\n</code></pre>"},{"location":"functions/#touppercase","title":"\ud83d\udd39 <code>toUpperCase()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Converts a string to uppercase.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.toUpperCase() }}\n</code></pre>"},{"location":"functions/#trim","title":"\ud83d\udd39 <code>trim()</code>","text":"<ul> <li>Return Type: <code>String</code></li> <li>Description: Removes leading and trailing whitespace from a string.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.trim() }}\n</code></pre>"},{"location":"functions/#unique","title":"\ud83d\udd39 <code>unique()</code>","text":"<ul> <li>Return Type: <code>List</code></li> <li>Description: Returns a new list containing only the unique elements from the original list.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.unique() }}\n</code></pre>"},{"location":"functions/#values","title":"\ud83d\udd39 <code>values()</code>","text":"<ul> <li>Return Type: <code>List&lt;dynamic&gt;</code></li> <li>Description: Returns a list of all values in a map.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.values() }}\n</code></pre>"},{"location":"functions/#where","title":"\ud83d\udd39 <code>where()</code>","text":"<ul> <li>Return Type: <code>List</code></li> <li>Description: Filters a list, returning elements that are equal to the argument.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.where() }}\n</code></pre>"},{"location":"functions/#wherenot","title":"\ud83d\udd39 <code>whereNot()</code>","text":"<ul> <li>Return Type: <code>List</code></li> <li>Description: Filters a list, returning elements that are not equal to the argument.</li> <li>Usage:</li> </ul> <pre><code>{{ __value.whereNot() }}\n</code></pre>"},{"location":"hooks/","title":"\ud83e\ude9d Pre and Post Hooks","text":"<p>Hooks let you run custom scripts before or after project generation.</p>"},{"location":"hooks/#what-are-hooks","title":"What are Hooks?","text":"<ul> <li>Pre-hook: Executes before template generation.</li> <li>Post-hook: Executes after template generation.</li> </ul>"},{"location":"hooks/#hook-files-location","title":"Hook Files Location","text":"<ul> <li>Hooks are stored as shell scripts inside the project template folder:</li> </ul> <pre><code>\n.quick-start/hooks/pre\\_hook.sh\n.quick-start/hooks/post\\_hook.sh\n\n````\n\n---\n\n## Adding Hooks\n\n1. Create `pre_hook.sh` and/or `post_hook.sh` scripts in `.quick-start/hooks/`.\n2. Write your custom commands in these scripts.\n3. When generating a project:\n - The **pre-hook** runs first.\n - Then the template is generated.\n - Then the **post-hook** runs.\n\n---\n\n## Example Pre Hook (`pre_hook.sh`)\n\n```bash\n#!/bin/bash\necho \"Running pre-generation tasks...\"\n# e.g., check dependencies\nnode -v || echo \"Warning: Node.js not found\"\n````\n\n---\n\n## Example Post Hook (`post_hook.sh`)\n\n```bash\n#!/bin/bash\necho \"Running post-generation tasks...\"\n# e.g., install dependencies\nnpm install\n</code></pre>"},{"location":"hooks/#notes","title":"Notes","text":"<ul> <li>Make sure hooks are executable (<code>chmod +x pre_hook.sh post_hook.sh</code>).</li> <li>Errors in hooks may stop or warn during generation.</li> <li>Hooks allow automation around your project scaffolding process.</li> </ul> <p>\u27a1\ufe0f Next: Excluding Files and Folders</p>"},{"location":"templates/","title":"Templates","text":""},{"location":"templates/#template-variables-and-control-flow-examples","title":"\ud83e\udde0 Template Variables and Control Flow Examples","text":""},{"location":"templates/#input-data-example","title":"\ud83d\udd21 Input Data Example","text":"<pre><code>{\n  \"myMap\": { \"name\": \"John\", \"age\": 30 },\n  \"myList\": [\"apple\", \"banana\"],\n  \"isAdmin\": true\n}\n</code></pre>"},{"location":"templates/#range-lists","title":"\ud83d\udd01 <code>{{#range lists}} ... {{%}}</code>","text":"<p>Loops through a list or map.</p> <ul> <li>If <code>lists</code> is a Map, use <code>.__key</code> and <code>.__value</code>.</li> <li>If <code>lists</code> is a List, use <code>.__index</code> and <code>.</code>.</li> </ul>"},{"location":"templates/#example-map","title":"\ud83d\udccc Example (Map):","text":"<pre><code>{{#range myMap}}\n  {{.__key}}: {{.__value}}\n{{%}}\n</code></pre> <p>\ud83d\udce4 Output:</p> <pre><code>  name: John\n  age: 30\n</code></pre>"},{"location":"templates/#example-list","title":"\ud83d\udccc Example (List):","text":"<pre><code>{{#range myList}}\n  {{.__index}}: {{.}}\n{{%}}\n</code></pre> <p>\ud83d\udce4 Output:</p> <pre><code>  0: apple\n  1: banana\n</code></pre>"},{"location":"templates/#if-and","title":"\u2753 <code>{{#if ...}} ... {{%}}</code> and <code>{{^ ...}} ... {{%}}</code>","text":"<p>Control flow for booleans or value presence.</p> <ul> <li><code>{{#if condition}}</code> renders if true</li> <li><code>{{^ condition}}</code> renders if false</li> </ul>"},{"location":"templates/#example","title":"\ud83d\udccc Example:","text":"<pre><code>{{#if isAdmin}}\n  Admin Access\n{{%}}\n\n{{^ isAdmin }}\n  Guest Access\n{{%}}\n</code></pre> <p>\ud83d\udce4 Output:</p> <pre><code>  Admin Access\n</code></pre>"},{"location":"templates/#function-chaining","title":"\ud83d\udd17 Function Chaining","text":"<p>Call methods directly on values using dot chaining.</p>"},{"location":"templates/#example_1","title":"\ud83d\udccc Example:","text":"<pre><code>{{ \"my_string\".toCamelCase().toPascalCase() }}\n</code></pre> <p>\ud83d\udce4 Output:</p> <pre><code>  MyString\n</code></pre>"},{"location":"templates/#variables","title":"\ud83d\udce6 Variables","text":"<p>You can store and retrieve values inside the template:</p> <ul> <li><code>{{ 'var'.setVar(__value) }}</code> \u2014 stores <code>__value</code> into a variable</li> <li><code>{{ getVar('var') }}</code> \u2014 retrieves stored variable</li> </ul>"},{"location":"templates/#example_2","title":"\ud83d\udccc Example:","text":"<pre><code>{{ 'userId'.setVar(\"abc123\") }}\nUser ID: {{ getVar('userId') }}\n</code></pre> <p>\ud83d\udce4 Output:</p> <pre><code>  User ID: abc123\n</code></pre>"},{"location":"templates/#inline-comments","title":"\ud83d\udcac Inline Comments","text":"<p>Use <code>{{! comment }}</code> for inline comments. These are ignored.</p>"},{"location":"templates/#example_3","title":"\ud83d\udccc Example:","text":"<pre><code>{{! This is a comment }}\nHello\n</code></pre> <p>\ud83d\udce4 Output:</p> <pre><code>  Hello\n</code></pre>"},{"location":"variables/","title":"Variables","text":""},{"location":"variables/#managing-project-variables","title":"\u2699\ufe0f Managing Project Variables","text":"<p>Project variables allow you to customize your template generation dynamically.</p>"},{"location":"variables/#new-json-variable-support","title":"\ud83c\udd95 New: JSON Variable Support","text":"<p>You can now load a JSON file and use its contents as a variable.</p> <p>\ud83d\udcf8 Screenshots:</p> <ul> <li> <p>\ud83d\uddbc\ufe0f Project Variables Panel </p> </li> <li> <p>\ud83d\uddbc\ufe0f JSON Load Example </p> </li> <li> <p>\ud83d\uddbc\ufe0f Loaded JSON Result </p> </li> </ul>"},{"location":"variables/#adding-variables","title":"Adding Variables","text":"<ol> <li>On the Project Nav Bar, click Project Variables.</li> <li>Click Add Variable.</li> <li> <p>Provide:</p> </li> <li> <p>Name (e.g., <code>project_name</code>)</p> </li> <li>Type (string, boolean, list, map, json)</li> <li>Default Value (optional or file path for JSON)</li> </ol>"},{"location":"variables/#variable-types","title":"Variable Types","text":"Type Description Example String Text value <code>\"MyApp\"</code> Boolean True or False <code>true</code> List List of values <code>[\"feature1\", \"feature2\"]</code> Map List of key-value pairs <code>[{\"name\": \"John\"}]</code> JSON Load json from file or url <code>-</code>"},{"location":"variables/#using-variables-in-templates","title":"Using Variables in Templates","text":"<ul> <li>Use <code>{{variable_name}}</code> in filenames and file contents.</li> <li>Supports loops, conditions, and chaining (see Templates.md).</li> </ul>"},{"location":"variables/#editing-variables","title":"Editing Variables","text":"<ul> <li>Update variable values anytime in Project Variables.</li> <li>JSON variables re-parse on change.</li> <li>Changes apply immediately in project generation.</li> </ul>"},{"location":"variables/#best-practices","title":"Best Practices","text":"<ul> <li>Use clear and consistent variable names.</li> <li>Provide defaults for optional variables.</li> <li>Group related variables logically.</li> <li>Use JSON for structured config (e.g., OpenAPI, settings, data models).</li> </ul> <p>\u27a1\ufe0f Next: Build-in Functions</p>"},{"location":"waitlist/","title":"\ud83d\ude80 Join the Waitlist","text":"<p>We\u2019re launching soon. Be the first to try Quick-Start.dev!</p> <p>\ud83d\ude80 Click here to join the waitlist</p>"}]}
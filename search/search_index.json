{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\ude80 Getting Started","text":"<p>Quick-Start.dev is a GUI-based project scaffolder and project template editor \u2013 like Cookiecutter, but with a modern graphical interface. Quickly generate, customize, and manage project structures with powerful visual tools.</p>"},{"location":"#features","title":"\u2728 Features","text":""},{"location":"#explorer","title":"\ud83d\uddc2\ufe0f Explorer","text":"<ul> <li> If condition support</li> <li> Invert condition</li> <li> Loop rendering</li> <li> No condition rendering</li> <li> Show folder icon</li> <li> Show file icon</li> <li> Add/Edit/Remove conditions</li> <li> Delete file/folder</li> <li> Rename file/folder</li> <li> Copy/Paste/Drop file/folder</li> <li> Folder sort</li> <li> Performance improvements</li> <li> Search and replace</li> </ul>"},{"location":"#quickstart","title":"\u26a1 QuickStart","text":"<ul> <li> Terminal launcher</li> <li> Project startup scripts</li> <li> Variable declarations</li> <li> Feature generator</li> <li> Hooks support</li> <li> Ignore <code>.quick_start</code> folder on generation</li> <li> Exclude folders on generation</li> </ul>"},{"location":"#qs-editor","title":"\ud83d\udcdd QS Editor","text":"<ul> <li> Syntax highlighting</li> <li> Auto-complete for variables</li> <li> Auto-save</li> <li> Search and replace</li> <li> Open from explorer to editor</li> <li> Auto-complete for functions</li> <li> Code snippets</li> <li> Click-to-edit variables</li> <li> Change font support</li> </ul>"},{"location":"#upcoming-features","title":"\ud83d\udd2e Upcoming Features","text":"<ul> <li>\ud83d\udd27 OpenAPI integration: generate project templates from OpenAPI (OAI) specs</li> <li>\ud83e\udd16 AI-assisted template and project structure suggestions.</li> </ul> <p>Welcome to Quick-Start.dev! Follow these steps to build your first project template.</p>"},{"location":"#step-1-install-launch","title":"\ud83d\udee0\ufe0f Step 1: Install &amp; Launch","text":"<ol> <li>Download the latest release from GitHub Releases</li> <li>Launch the application</li> <li>Login or containue</li> </ol>"},{"location":"#step-2-create-a-new-template","title":"\ud83d\udcc1 Step 2: Create a New Template","text":"<ol> <li>Click New a new repository on your local drive</li> <li>Name your template (e.g., <code>my-clean-flutter-project</code>)</li> <li>Choose the base folder where the structure will be saved</li> <li>Add project variables.  </li> </ol>"},{"location":"#_1","title":"Home","text":""},{"location":"#step-3-add-files-and-folders","title":"\ud83e\udde9 Step 3: Add Files and Folders","text":"<ul> <li>Right-click to add folders or files</li> <li>Use <code>if</code> , <code>^if</code> and <code>for</code> syntax to create dynamic content  </li> </ul>"},{"location":"#step-4-declare-project-variables","title":"\ud83c\udfaf Step 4: Declare Project Variables","text":"<ul> <li>Go to Project Variables</li> <li>Add variables like:</li> <li><code>project_name</code></li> <li><code>author</code></li> <li><code>features</code> (list)</li> </ul>"},{"location":"#step-5-generate-a-project","title":"\u2699\ufe0f Step 5: Generate a Project","text":"<ul> <li>Click Generate Project </li> <li>Fill project variables</li> <li>Your fully generated project appears</li> <li> </li> </ul>"},{"location":"exclude/","title":"\ud83d\udeab Excluding Files and Folders","text":"<p>You can exclude specific files or folders during the generation process.</p>"},{"location":"exclude/#how-to-exclude","title":"How to Exclude","text":"<p>When you start generating a project:</p> <ol> <li>The file/folder structure will be displayed.</li> <li>You can unselect any file or folder you want to exclude.</li> <li>Optionally, enter relative paths to exclude manually using an input field.</li> </ol> <p>Example manual exclude input:</p> <pre><code>\nnode_modules/\n.quick-start/\ntests/temp/\nREADME_draft.md\n\n</code></pre>"},{"location":"exclude/#use-cases","title":"Use Cases","text":"<ul> <li>Skip temporary or configuration folders not needed in the final project.</li> <li>Avoid including large directories like <code>node_modules</code>.</li> <li>Exclude scaffolding config folders like <code>.quick-start</code>.</li> </ul>"},{"location":"exclude/#notes","title":"Notes","text":"<ul> <li>Paths are relative to the root of the generated project.</li> <li>Wildcard support (<code>*</code>) for patterns is planned for a future release.</li> <li>Excluded items will not be copied into the generated output.</li> </ul>"},{"location":"hooks/","title":"\ud83e\ude9d Pre and Post Hooks","text":"<p>Hooks let you run custom scripts before or after project generation.</p>"},{"location":"hooks/#what-are-hooks","title":"What are Hooks?","text":"<ul> <li>Pre-hook: Executes before template generation.</li> <li>Post-hook: Executes after template generation.</li> </ul>"},{"location":"hooks/#hook-files-location","title":"Hook Files Location","text":"<ul> <li>Hooks are stored as shell scripts inside the project template folder:</li> </ul> <pre><code>\n.quick-start/hooks/pre\\_hook.sh\n.quick-start/hooks/post\\_hook.sh\n\n````\n\n---\n\n## Adding Hooks\n\n1. Create `pre_hook.sh` and/or `post_hook.sh` scripts in `.quick-start/hooks/`.\n2. Write your custom commands in these scripts.\n3. When generating a project:\n - The **pre-hook** runs first.\n - Then the template is generated.\n - Then the **post-hook** runs.\n\n---\n\n## Example Pre Hook (`pre_hook.sh`)\n\n```bash\n#!/bin/bash\necho \"Running pre-generation tasks...\"\n# e.g., check dependencies\nnode -v || echo \"Warning: Node.js not found\"\n````\n\n---\n\n## Example Post Hook (`post_hook.sh`)\n\n```bash\n#!/bin/bash\necho \"Running post-generation tasks...\"\n# e.g., install dependencies\nnpm install\n</code></pre>"},{"location":"hooks/#notes","title":"Notes","text":"<ul> <li>Make sure hooks are executable (<code>chmod +x pre_hook.sh post_hook.sh</code>).</li> <li>Errors in hooks may stop or warn during generation.</li> <li>Hooks allow automation around your project scaffolding process.</li> </ul> <p>\u27a1\ufe0f Next: Excluding Files and Folders</p>"},{"location":"templates/","title":"Template Variables and Control Flow Examples","text":""},{"location":"templates/#boolean-condition-if-not-if","title":"Boolean Condition (<code>if</code> / <code>not if</code>)","text":"<pre><code>{{#isAdmin}}\n  You are an admin.\n{{%isAdmin}}\n\n{{^isAdmin}}\n  You are NOT an admin.\n{{%isAdmin}}\n````\n\n* ```{{#isAdmin}} ... {{%isAdmin}}``` renders if `isAdmin` is true.\n* ```{{^isAdmin}} ... {{%isAdmin}}``` renders if `isAdmin` is false.\n\n---\n\n## Loop over List of Primitives\n\nGiven:\n\n```json\nlist = [\"accounts\", \"profile\", \"settings\", \"chat\"]\n</code></pre> <p>Template:</p> <pre><code>{{#list}}\n  {{.}}\n{{%list}}\n</code></pre> <ul> <li><code>{{.}}</code> outputs the current item.</li> </ul>"},{"location":"templates/#loop-over-list-of-maps","title":"Loop over List of Maps","text":"<p>Given:</p> <pre><code>listMap = [{'name':'john'}, {'name':'mike'}]\n</code></pre> <p>Template:</p> <pre><code>{{#listMap}}\n  {{name}}\n{{%listMap}}\n</code></pre> <ul> <li>Outputs each <code>name</code> value in the list of maps.</li> </ul> <p>Note:</p> <ul> <li><code>{{#var}} ... {{%var}}</code> denotes a block for the variable <code>var</code>.</li> <li><code>{{^var}} ... {{%var}}</code> denotes the inverse (not) block.</li> <li><code>{{.}}</code> is used to print the current item in a list of primitives.</li> </ul>"},{"location":"variables/","title":"\u2699\ufe0f Managing Project Variables","text":"<p>Project variables allow you to customize your template generation dynamically.</p>"},{"location":"variables/#adding-variables","title":"Adding Variables","text":"<ol> <li>Open Project Settings in Quick-Start.dev.</li> <li>Click Add Variable.</li> <li>Provide:</li> <li>Name (e.g., <code>project_name</code>)</li> <li>Type (string, boolean, list, map)</li> <li>Default Value (optional)</li> </ol>"},{"location":"variables/#variable-types","title":"Variable Types","text":"Type Description Example String Text value <code>\"MyApp\"</code> Boolean True or False <code>true</code> List List of values <code>[\"feature1\", \"feature2\"]</code> Map List of key-value pairs <code>[{\"name\": \"John\"}, {\"name\": \"Mike\"}]</code>"},{"location":"variables/#using-variables-in-templates","title":"Using Variables in Templates","text":"<ul> <li>Use <code>{variable_name}</code> in filenames and file contents.</li> <li>Supports complex structures with loops and conditions (see Templates.md).</li> </ul>"},{"location":"variables/#editing-variables","title":"Editing Variables","text":"<ul> <li>Update variable values anytime in Project Settings.</li> <li>Variables are applied immediately in project generation.</li> </ul>"},{"location":"variables/#best-practices","title":"Best Practices","text":"<ul> <li>Use clear and consistent variable names.</li> <li>Provide defaults for optional variables.</li> <li>Group related variables logically.</li> </ul> <p>\u27a1\ufe0f Next: Pre and Post Hooks</p>"}]}